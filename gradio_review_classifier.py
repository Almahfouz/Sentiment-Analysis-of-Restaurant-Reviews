# -*- coding: utf-8 -*-
"""task2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B3cnP1FjAwPHdMMXEam3mAaDj21fcKVp
"""

!pip install transformers gradio

import gradio as gr
import seaborn as sns
import matplotlib.pyplot as plt

# List of reviews and ratings
reviews_data = [
    {"review": "The food was amazing and the service was excellent!", "rating": 5},
    {"review": "It was okay, not the best experience but not bad.", "rating": 3},
    {"review": "The staff was friendly and the food was delicious.", "rating": 4},
    {"review": "The atmosphere was cozy and the food was decent.", "rating": 3},
    {"review": "The food was terrible, and I had to wait for an hour!", "rating": 1},
    {"review": "Nice place, I enjoyed the food and the atmosphere.", "rating": 4},
    {"review": "The service was poor, but the food was decent.", "rating": 2}
]

# Classify the review directly based on the rating
def classify_review(user_review):
    for review_data in reviews_data:
        if user_review.lower() in review_data["review"].lower():  # No need for exact match, just containment
            rating = review_data["rating"]
            return "Positive" if rating >= 4 else "Negative"
    return "Review not found."

# Plot the distribution of ratings
def plot_rating_distribution():
    ratings = [review["rating"] for review in reviews_data]
    plt.figure(figsize=(6, 4))
    sns.countplot(x=ratings, order=[1, 2, 3, 4, 5])
    plt.title('Distribution of Ratings')
    plt.xlabel('Rating')
    plt.ylabel('Count')
    plt.tight_layout()
    return plt.gcf()

# Gradio interface for review classification
review_interface = gr.Interface(
    fn=classify_review,
    inputs=gr.Textbox(lines=2, placeholder="Enter your review here", label="Review"),
    outputs="text",
    title="Simple Review Classifier",
    description="Enter a review to classify it as positive or negative based on the rating."
)

# Gradio interface to plot the distribution of ratings
plot_interface = gr.Interface(
    fn=plot_rating_distribution,
    inputs=[],
    outputs="plot",
    title="Rating Distribution",
    description="Shows the distribution of ratings in the dataset."
)

# Combine the two interfaces using tabs
tabbed_interface = gr.TabbedInterface([review_interface, plot_interface], ["Review Classifier", "Rating Distribution"])

# Launch the interfaces
tabbed_interface.launch()
